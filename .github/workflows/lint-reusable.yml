name: Lint Reusable

on:
  workflow_call:
    inputs:
      modules:
        required: true
        type: string
      go-version:
        required: true
        type: string
      golangci-lint-version:
        required: true
        type: string

jobs:
  golangci-lint:
    name: Lint all Go modules
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v4.2.2

      - name: üõ† Set up Go
        uses: actions/setup-go@v5.4.0
        with:
          go-version: ${{ inputs.go-version }}

      - name: üèó Create Go workspace
        run: |
            echo "üèó –°–æ–∑–¥–∞–µ–º Go workspace..."
            go work init
            for mod in ${{ inputs.modules }}; do
              if [ -d "$mod" ]; then
                echo "üèó –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥—É–ª—å $mod –≤ workspace"
                go work use "$mod"
              fi
            done
            echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ go.work:"
            cat go.work
      

      - name: üìå Install Task
        uses: arduino/setup-task@v2.0.0

      - name: üîß Install dependencies for all modules
        run: |
            echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –≤ workspace..."
            go work sync
            for mod in ${{ inputs.modules }}; do
              if [ -d "$mod" ]; then
                echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è $mod"
                cd "$mod" && go mod download && go mod tidy
                cd ..
              fi
            done  

      - name: ‚úÖ Run golangci-lint via Taskfile
        env:
          MODULES: ${{ inputs.modules }}
          GOLANGCI_LINT_VERSION: ${{ inputs.golangci-lint-version }}
        run: task lint
