syntax = "proto3";

// Package inventory.v1 содержит API для работы с инвентарем деталей космических кораблей
package inventory.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

option go_package = "github.com/linemk/rocket-shop/shared/pkg/proto/inventory/v1;inventory_v1";

// InventoryService предоставляет API для работы с инвентарем деталей
service InventoryService {
  // GetPart возвращает информацию о детали по её UUID
  rpc GetPart(GetPartRequest) returns (GetPartResponse);
  
  // ListParts возвращает список деталей с возможностью фильтрации
  rpc ListParts(ListPartsRequest) returns (ListPartsResponse);
}

// Категория детали
enum Category {
  CATEGORY_UNSPECIFIED = 0;
  CATEGORY_ENGINE = 1;
  CATEGORY_FUEL = 2;
  CATEGORY_PORTHOLE = 3;
  CATEGORY_WING = 4;
}

// Размеры детали
message Dimensions {
  // length длина в см
  double length = 1;
  
  // width ширина в см
  double width = 2;
  
  // height высота в см
  double height = 3;
  
  // weight вес в кг
  double weight = 4;
}

// Информация о производителе
message Manufacturer {
  // name название производителя
  string name = 1;
  
  // country страна производства
  string country = 2;
  
  // website сайт производителя
  string website = 3;
}

// Фильтр для поиска деталей
message PartsFilter {
  // uuids список UUID'ов. Пусто — не фильтруем по UUID
  repeated string uuids = 1;
  
  // names список имён. Пусто — не фильтруем по имени
  repeated string names = 2;
  
  // categories список категорий. Пусто — не фильтруем по категории
  repeated Category categories = 3;
  
  // manufacturer_countries список стран производителей. Пусто — не фильтруем по стране
  repeated string manufacturer_countries = 4;
  
  // tags список тегов. Пусто — не фильтруем по тегам
  repeated string tags = 5;
}

// Деталь космического корабля
message Part {
  // uuid уникальный идентификатор детали
  string uuid = 1;
  
  // name название детали
  string name = 2;
  
  // description описание детали
  string description = 3;
  
  // price цена за единицу
  double price = 4;
  
  // stock_quantity количество на складе
  int64 stock_quantity = 5;
  
  // category категория детали
  Category category = 6;
  
  // dimensions размеры детали
  Dimensions dimensions = 7;
  
  // manufacturer информация о производителе
  Manufacturer manufacturer = 8;
  
  // tags теги для быстрого поиска
  repeated string tags = 9;
  
  // metadata гибкие метаданные
  google.protobuf.Struct metadata = 10;
  
  // created_at дата создания
  google.protobuf.Timestamp created_at = 11;
  
  // updated_at дата обновления
  google.protobuf.Timestamp updated_at = 12;
}

// Запрос на получение детали по UUID
message GetPartRequest {
  // uuid идентификатор детали
  string uuid = 1;
}

// Ответ с информацией о детали
message GetPartResponse {
  // part информация о детали
  Part part = 1;
}

// Запрос на получение списка деталей с фильтрацией
message ListPartsRequest {
  // filter фильтр по деталям (все поля опциональны)
  PartsFilter filter = 1;
}

// Ответ со списком деталей
message ListPartsResponse {
  // parts список найденных деталей
  repeated Part parts = 1;
}
