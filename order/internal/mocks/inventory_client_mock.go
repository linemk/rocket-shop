// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/linemk/rocket-shop/order/internal/client/grpc/inventory/v1 (interfaces: InventoryClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"

	v1 "github.com/linemk/rocket-shop/order/internal/client/grpc/inventory/v1"
)

// MockInventoryClient is a mock of InventoryClient interface.
type MockInventoryClient struct {
	ctrl     *gomock.Controller
	recorder *MockInventoryClientMockRecorder
}

// MockInventoryClientMockRecorder is the mock recorder for MockInventoryClient.
type MockInventoryClientMockRecorder struct {
	mock *MockInventoryClient
}

// NewMockInventoryClient creates a new mock instance.
func NewMockInventoryClient(ctrl *gomock.Controller) *MockInventoryClient {
	mock := &MockInventoryClient{ctrl: ctrl}
	mock.recorder = &MockInventoryClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInventoryClient) EXPECT() *MockInventoryClientMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockInventoryClient) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockInventoryClientMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockInventoryClient)(nil).Close))
}

// GetPart mocks base method.
func (m *MockInventoryClient) GetPart(arg0 context.Context, arg1 uuid.UUID) (v1.PartInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPart", arg0, arg1)
	ret0, _ := ret[0].(v1.PartInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPart indicates an expected call of GetPart.
func (mr *MockInventoryClientMockRecorder) GetPart(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPart", reflect.TypeOf((*MockInventoryClient)(nil).GetPart), arg0, arg1)
}
